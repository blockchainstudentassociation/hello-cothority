{"version":3,"file":"static/webpack/static/development/pages/index.js.4ea4cb89e605b603f6b4.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from 'react'\nimport identity, { net } from '@dedis/cothority'\nimport fetch from 'isomorphic-unfetch'\nimport 'babel-polyfill'\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { serverDescription: '' }\n  }\n\n  static async getInitialProps () {\n    const serversRes = await fetch('https://skipchain.dedis.ch/index.js')\n    const cothorityRes = await fetch('https://raw.githubusercontent.com/dedis/cothority/master/dedis-cothority.toml')\n    const servers = (await serversRes.json()).Blocks[0].Servers\n    const cothority = await cothorityRes.text()\n    return { servers, cothority }\n  }\n\n  async componentDidMount() {\n    const socket = new net.RosterSocket(identity.Roster.fromTOML(this.props.cothority), 'Status');\n    const res = await socket.send('status.Request', 'Response', {})\n    const serverDescription = await res.serveridentity.description\n    this.setState({ serverDescription })\n  }\n\n  render () {\n    return (\n      <div>\n        <h2>Got a list of servers:</h2>\n        <ul>\n          {this.props.servers.map(server => (\n            <li key={server}>{server}</li>\n          ))}\n        </ul>\n        <h4>Connected to {this.state.serverDescription}</h4>\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;;;;;;;;;;AAUA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;AA1BA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAZA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}