{"version":3,"file":"static/webpack/static/development/pages/index.js.0d3315d784ab83ef3c51.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from 'react'\nimport identity, { net } from '@louismerlin/cothority'\nimport fetch from 'isomorphic-unfetch'\nimport toml from 'toml'\nimport 'babel-polyfill'\nimport 'bulma/css/bulma.css'\n\nexport default class Index extends Component {\n  constructor (props) {\n    super(props)\n    this.state = { serverDescription: '' }\n  }\n\n  static async getInitialProps () {\n    const res = await fetch('https://raw.githubusercontent.com/dedis/cothority/master/dedis-cothority.toml')\n    const file = await res.text()\n    console.log(file)\n    const servers = toml.parse(file).servers\n    const cothority = file\n    return { servers, cothority }\n  }\n\n  async componentDidMount () {\n    const socket = new net.RosterSocket(identity.Roster.fromTOML(this.props.cothority), 'Status')\n    const res = await socket.send('status.Request', 'Response', {})\n    const serverDescription = await res.serveridentity.description\n    this.setState({ serverDescription })\n  }\n\n  render () {\n    return (\n      <div className='container'>\n        <h1 className='title is-1'>Hello, <span className='has-text-conode'>Cothority</span></h1>\n        <h2 className='title is-3'>List of official <span className='has-text-conode'>conodes</span>:</h2>\n        <table className='table is-fullwidth is-hoverable'>\n          <tbody>\n            {this.props.servers.map(server => (\n              <tr key={server.Public}><td>{server.Description}</td><td>{server.Address}</td></tr>\n            ))}\n          </tbody>\n        </table>\n        <br/>\n        {this.state.serverDescription\n          ? <h2 className='title is-3'>Connected to <span className='has-text-conode'>{this.state.serverDescription}</span></h2>\n          : <h2 className='title is-3'>Connecting to a <span className='has-text-conode'>conode</span>...</h2>\n        }\n        <style jsx>{`\n          .container {\n            font-family: sans-serif;\n            max-width: 800px;\n            margin: auto;\n          }\n          h1 {\n            text-align: center;\n          }\n          .has-text-conode {\n            color: #154c8e;\n          }\n        `}</style>\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;;;;;;;;;;AAWA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AA8BA;;;;;;;;;;;;;AA/CA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AAbA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}